package com.example.yousraalbizri.demo_project_vulnerability;
import android.app.Activity;
import android.app.ListActivity;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.View;
import android.view.ViewGroup;
import android.view.LayoutInflater;
import android.widget.ArrayAdapter;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;

import java.util.Vector;


public class ProjectFragment extends Fragment {

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_project,container,false);

        Bundle bundle = this.getArguments();
        if (bundle != null) {
            // here we are getting the details of the search from the user
            // and i am passing it directly to the app
            // instead we should get the details matching the user search form the repository
            // and then pass them to the string array instead
            // ----------------------------------------------------------
            //                              TO_DO
            // ----------------------------------------------------------
            // use the name and the id the user provided and search for the project
            // then put the details of that project in a string array
            // like i did with the name and the id bellow ..
            String[] projectDetails = {"Name : "+bundle.getString("name"),"ID : "+bundle.getString("id")};
            // keep the rest  as it is
            ListAdapter projectDetailsAdapter = new ArrayAdapter<String>(getActivity(),
                    android.R.layout.simple_list_item_1 , projectDetails);
            ListView projectDetailsView = (ListView)view.findViewById(R.id.projectDetails);
            projectDetailsView.setAdapter(projectDetailsAdapter);
            // ----------------------------------------------------------
            // now after we output the project details
            // we need to list the related projects
            // ----------------------------------------------------------
            //                              TO_DO
            // ----------------------------------------------------------
            // here we need to create an array of list views
            // the function should get the details of every related project
            // then push these details of each project (name , id ,. ..) in to a ListAdapter
            // this is a dummy for loop that will create 5 related projects
            // with the same name and id of the project the user is searching for
            // ... so we need a function that takes the name and id of the project
            // and searches for related projects
            // puts the details of these projects in a string array just like below
            // (i only included the name and the id here)
            // after that we add them to the vector just like i did
            Vector<ListAdapter> relatedProjectVector = new Vector<ListAdapter>(5);
            for (int i =0 ; i < 5 ; i++){
                String[] relatedProjectDetails = {"Name : "+bundle.getString("name"),"ID : "+bundle.getString("id")};
                ListAdapter relatedProjectDetailsAdapter = new ArrayAdapter<String>(getActivity(),
                        android.R.layout.simple_list_item_1 , relatedProjectDetails);
                relatedProjectVector.add(i,relatedProjectDetailsAdapter);
            }
            // here is after we fill our vector with list adapters adapted to the
            // string arrays we collected from the repository
            ListAdapter relatedProjectsAdapter = new CustomAdapter(getActivity(),relatedProjectVector);
            ListView relatedProjectsDetails = (ListView) view.findViewById(R.id.relatedProjectDetails);
            relatedProjectsDetails.setAdapter(relatedProjectsAdapter);

            // ----------------------------------------------------------
            //                              TO_DO
            // ----------------------------------------------------------
            // here we need to do basically the same thing but
            // instead of related projects ---> related vulnerabilities
            Vector<ListAdapter> relatedVulnerabilitiesVector = new Vector<ListAdapter>(5);
            for (int i =0 ; i < 5 ; i++){
                String[] relatedProjectDetails = {"vulnerability Name: "+bundle.getString("name"),"ID : "+bundle.getString("id")};
                ListAdapter relatedVulnerabilitiesAdapter = new ArrayAdapter<String>(getActivity(),
                        android.R.layout.simple_list_item_1 , relatedProjectDetails);
                relatedVulnerabilitiesVector.add(i,relatedVulnerabilitiesAdapter);
            }
            ListAdapter relatedVulnerabilitiesAdapter = new CustomVulnerabilityAdapter(getActivity(),relatedVulnerabilitiesVector);
            ListView relatedVulnerabilitiesDetails = (ListView) view.findViewById(R.id.relatedVulnerabilitiesDetails);
            relatedVulnerabilitiesDetails.setAdapter(relatedVulnerabilitiesAdapter);


        }
        return view;
    }
}
